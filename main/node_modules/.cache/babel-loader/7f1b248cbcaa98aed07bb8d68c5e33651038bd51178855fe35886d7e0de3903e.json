{"ast":null,"code":"import React from\"react\";import{useSelector,useDispatch}from'react-redux';import'./Restart.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Restart(){var dispatch=useDispatch();var isRestart=useSelector(function(state){return state.isRestart;});var isNamePage=useSelector(function(state){return state.isNamePage;});var isPlanetClosed=useSelector(function(state){return state.isPlanetClosed;});var userData=useSelector(function(state){return state.userData;});// API 개발 요청(사용자 개설일을 0으로 수정)\n// (팝업) 행성 만료\nfunction PlanetClosedConfirm(){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:isPlanetClosed?\"isPlanetClosedConfirm\":\"isPlanetClosedConfirm_fade\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"isPlanetClosedConfirm_outContainer\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"isPlanetClosedConfirm_title\",children:[userData.nickname,\" \\uD589\\uC131\\uC744\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"isPlanetClosedConfirm_title\",children:\"\\uB9CC\\uB8CC\\uC2DC\\uD0A4\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"isPlanetClosedConfirm_p\",children:\"\\uD589\\uC131\\uC774 \\uB9CC\\uB8CC\\uB418\\uBA74\"}),/*#__PURE__*/_jsx(\"p\",{className:\"isPlanetClosedConfirm_p\",children:\"\\uBC1B\\uC558\\uB358 \\uD3B8\\uC9C0\\uB3C4 \\uBAA8\\uB450 \\uC0AD\\uC81C\\uB418\\uC694.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"isPlanetClosedConfirm_innerBox\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"isPlanetClosedConfirm_button_signOut\",onClick:function onClick(){dispatch({type:'CHANGE_ISPLANETCLOSED',data:!isPlanetClosed});},children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"isPlanetClosedConfirm_button_cancel\",onClick:function onClick(){dispatch({type:'CHANGE_ISPLANETCLOSED',data:!isPlanetClosed});dispatch({type:'CHANGE_ISNAMEPAGE',data:!isNamePage});dispatch({type:'CHANGE_ISRESTART',data:!isRestart});dispatch({type:'CHANGE_LETTERDATA',data:[]});dispatch({type:'CHANGE_OPENDATE',data:0});},children:\"\\uB9CC\\uB8CC\\uD558\\uAE30\"})]})]})})});};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"restart_btn\",onClick:function onClick(){dispatch({type:'CHANGE_ISPLANETCLOSED',data:!isPlanetClosed});// if (window.confirm('새 행성을 만들까요? (기존의 데이터가 모두 삭제됩니다.)')) {\n//     dispatch({ type: 'CHANGE_ISNAMEPAGE', data: !isNamePage });\n//     dispatch({ type: 'CHANGE_ISRESTART', data: !isRestart });\n//     dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\n//     dispatch({ type: 'CHANGE_OPENDATE', data: 0 });\n// };\n},children:\"\\uC0C8 \\uD589\\uC131 \\uAC1C\\uC124\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(PlanetClosedConfirm,{})]});};export default Restart;","map":{"version":3,"names":["React","useSelector","useDispatch","Restart","dispatch","isRestart","state","isNamePage","isPlanetClosed","userData","PlanetClosedConfirm","nickname","type","data"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Restart.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './Restart.css';\r\n\r\nfunction Restart() {\r\n    const dispatch = useDispatch();\r\n    const isRestart = useSelector((state) => state.isRestart);\r\n    const isNamePage = useSelector((state) => state.isNamePage);\r\n    const isPlanetClosed = useSelector((state) => state.isPlanetClosed);\r\n    const userData = useSelector((state) => state.userData);\r\n\r\n    // API 개발 요청(사용자 개설일을 0으로 수정)\r\n\r\n    // (팝업) 행성 만료\r\n    function PlanetClosedConfirm() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isPlanetClosed ? \"isPlanetClosedConfirm\" : \"isPlanetClosedConfirm_fade\"}>\r\n                    <div className='isPlanetClosedConfirm_outContainer'>\r\n                        <p className='isPlanetClosedConfirm_title'>{userData.nickname} 행성을</p>\r\n                        <p className='isPlanetClosedConfirm_title'>만료시키겠습니까?</p>\r\n                        <p className='isPlanetClosedConfirm_p'>행성이 만료되면</p>\r\n                        <p className='isPlanetClosedConfirm_p'>받았던 편지도 모두 삭제되요.</p>\r\n                        <div className='isPlanetClosedConfirm_innerBox'>\r\n                            <div className='isPlanetClosedConfirm_button_signOut' onClick={() => {\r\n                                dispatch({ type: 'CHANGE_ISPLANETCLOSED', data: !isPlanetClosed });\r\n                            }}>취소</div>\r\n                            <div className='isPlanetClosedConfirm_button_cancel' onClick={() => {\r\n                                dispatch({ type: 'CHANGE_ISPLANETCLOSED', data: !isPlanetClosed });\r\n                                dispatch({ type: 'CHANGE_ISNAMEPAGE', data: !isNamePage });\r\n                                dispatch({ type: 'CHANGE_ISRESTART', data: !isRestart });\r\n                                dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\r\n                                dispatch({ type: 'CHANGE_OPENDATE', data: 0 });\r\n                            }}>만료하기</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"restart_btn\" onClick={() => {\r\n                dispatch({ type: 'CHANGE_ISPLANETCLOSED', data: !isPlanetClosed });\r\n                // if (window.confirm('새 행성을 만들까요? (기존의 데이터가 모두 삭제됩니다.)')) {\r\n                //     dispatch({ type: 'CHANGE_ISNAMEPAGE', data: !isNamePage });\r\n                //     dispatch({ type: 'CHANGE_ISRESTART', data: !isRestart });\r\n                //     dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\r\n                //     dispatch({ type: 'CHANGE_OPENDATE', data: 0 });\r\n                // };\r\n            }}>새 행성 개설하기</div>\r\n            <PlanetClosedConfirm></PlanetClosedConfirm>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Restart;"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,MAAO,eAAe,CAAC,wFAEvB,QAASC,QAAO,EAAG,CACf,GAAMC,SAAQ,CAAGF,WAAW,EAAE,CAC9B,GAAMG,UAAS,CAAGJ,WAAW,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACD,SAAS,GAAC,CACzD,GAAME,WAAU,CAAGN,WAAW,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACC,UAAU,GAAC,CAC3D,GAAMC,eAAc,CAAGP,WAAW,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACE,cAAc,GAAC,CACnE,GAAMC,SAAQ,CAAGR,WAAW,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACG,QAAQ,GAAC,CAEvD;AAEA;AACA,QAASC,oBAAmB,EAAG,CAC3B,mBACI,KAAC,KAAK,CAAC,QAAQ,wBACX,YAAK,SAAS,CAAEF,cAAc,CAAG,uBAAuB,CAAG,4BAA6B,uBACpF,aAAK,SAAS,CAAC,oCAAoC,wBAC/C,WAAG,SAAS,CAAC,6BAA6B,WAAEC,QAAQ,CAACE,QAAQ,yBAAS,cACtE,UAAG,SAAS,CAAC,6BAA6B,+DAAc,cACxD,UAAG,SAAS,CAAC,yBAAyB,yDAAa,cACnD,UAAG,SAAS,CAAC,yBAAyB,0FAAqB,cAC3D,aAAK,SAAS,CAAC,gCAAgC,wBAC3C,YAAK,SAAS,CAAC,sCAAsC,CAAC,OAAO,CAAE,kBAAM,CACjEP,QAAQ,CAAC,CAAEQ,IAAI,CAAE,uBAAuB,CAAEC,IAAI,CAAE,CAACL,cAAe,CAAC,CAAC,CACtE,CAAE,0BAAS,cACX,YAAK,SAAS,CAAC,qCAAqC,CAAC,OAAO,CAAE,kBAAM,CAChEJ,QAAQ,CAAC,CAAEQ,IAAI,CAAE,uBAAuB,CAAEC,IAAI,CAAE,CAACL,cAAe,CAAC,CAAC,CAClEJ,QAAQ,CAAC,CAAEQ,IAAI,CAAE,mBAAmB,CAAEC,IAAI,CAAE,CAACN,UAAW,CAAC,CAAC,CAC1DH,QAAQ,CAAC,CAAEQ,IAAI,CAAE,kBAAkB,CAAEC,IAAI,CAAE,CAACR,SAAU,CAAC,CAAC,CACxDD,QAAQ,CAAC,CAAEQ,IAAI,CAAE,mBAAmB,CAAEC,IAAI,CAAE,EAAG,CAAC,CAAC,CACjDT,QAAQ,CAAC,CAAEQ,IAAI,CAAE,iBAAiB,CAAEC,IAAI,CAAE,CAAE,CAAC,CAAC,CAClD,CAAE,sCAAW,GACX,GACJ,EACJ,EACO,CAEzB,CAAC,CAED,mBACI,MAAC,KAAK,CAAC,QAAQ,yBACX,YAAK,SAAS,CAAC,aAAa,CAAC,OAAO,CAAE,kBAAM,CACxCT,QAAQ,CAAC,CAAEQ,IAAI,CAAE,uBAAuB,CAAEC,IAAI,CAAE,CAACL,cAAe,CAAC,CAAC,CAClE;AACA;AACA;AACA;AACA;AACA;AACJ,CAAE,0DAAgB,cAClB,KAAC,mBAAmB,IAAuB,GAC9B,CAEzB,CAAC,CAED,cAAeL,QAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}