{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blue_\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\GitHub\\\\soso-web\\\\main\\\\src\\\\components\\\\Redirect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport './Redirect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Redirect() {\n  _s();\n  const navigater = useNavigate();\n  const dispatch = useDispatch();\n  const urlParams = new URL(window.location.href).searchParams;\n  const name = urlParams.get('code');\n  const urlParamsErro = new URL(window.location.href).searchParams;\n  const nameErro = urlParamsErro.get('error_description');\n\n  // console.log 삭제 필요.\n\n  // 받은 편지 배열 요청 기능\n  function RequestLetterArray(userId) {\n    fetch(`${process.env.REACT_APP_LETTER_ARRAY}${userId}`, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error();\n      }\n      ;\n      return res.json();\n    }).then(data => {\n      dispatch({\n        type: 'CHANGE_LETTERDATA',\n        data: data\n      });\n    }).catch(error => {\n      alert('정상적으로 사용자 편지 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\n      dispatch({\n        type: 'CHANGE_USERID',\n        data: null\n      });\n      navigater('/login');\n    });\n  }\n  ;\n\n  // 사용자 정보 요청 기능\n  function RequestUserData(userId) {\n    fetch(`${process.env.REACT_APP_USER_DATA}${userId}`, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error();\n      }\n      ;\n      return res.json();\n    }).then(data => {\n      dispatch({\n        type: 'CHANGE_USERNICKNAME',\n        data: String(data.userNickName)\n      });\n      dispatch({\n        type: 'CHANGE_OPENDATE',\n        data: Number(data.userOpenDate)\n      });\n      RequestLetterArray(userId);\n    }).catch(error => {\n      alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\n      dispatch({\n        type: 'CHANGE_USERID',\n        data: null\n      });\n      navigater('/login');\n    });\n  }\n  ;\n\n  // (랜더링 직후) 사용자 로그인 기능\n  useEffect(() => {\n    setTimeout(() => {\n      if (nameErro === 'User denied access') {\n        alert('로그인에 실패하였습니다.');\n        dispatch({\n          type: 'CHANGE_USERID',\n          data: null\n        });\n        navigater('/login');\n      }\n      ;\n      const code = {\n        code: name\n      };\n      const queryStringBody = Object.keys(code).map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k])).join(\"&\");\n      fetch(`${process.env.REACT_APP_KAKAO_LOGIN}`, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n        },\n        body: queryStringBody\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        ;\n        return res.json();\n      }).then(data => {\n        fetch(`${process.env.REACT_APP_USERID}`, {\n          method: 'POST',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(res => {\n          if (!res.ok) {\n            throw new Error();\n          }\n          ;\n          return res.json();\n        }).then(data => {\n          // \n          console.log(data);\n          // \n          dispatch({\n            type: 'CHANGE_USERID',\n            data: data\n          });\n          RequestUserData(data);\n          navigater('/main');\n        }).catch(error => {\n          alert('서버가 불안정 하여 사용자 아이디를 받아오지 못했습니다.');\n          dispatch({\n            type: 'CHANGE_USERID',\n            data: null\n          });\n          navigater('/login');\n        });\n      }).catch(error => {\n        alert('서버가 불안정 하여 로그인에 실패했습니다.');\n        dispatch({\n          type: 'CHANGE_USERID',\n          data: null\n        });\n        navigater('/login');\n      });\n    }, 500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"redirect_outContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section_shootingStar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"redirect_gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"redirect_h3\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"redirect_h4\",\n        children: \"[\\uB9AC\\uBE59\\uD3EC\\uC778\\uD2B8] \\uB2EC\\uC5D0\\uB294 \\uD1A0\\uB07C\\uAC00 \\uB5A1\\uC744 \\uB9CC\\uB4E4\\uACE0 \\uC788\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(Redirect, \"u8YrTRbJdKBnoaK26foC3awRqKA=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Redirect;\n;\nexport default Redirect;\nvar _c;\n$RefreshReg$(_c, \"Redirect\");","map":{"version":3,"names":["React","useEffect","useNavigate","useDispatch","Redirect","navigater","dispatch","urlParams","URL","window","location","href","searchParams","name","get","urlParamsErro","nameErro","RequestLetterArray","userId","fetch","process","env","REACT_APP_LETTER_ARRAY","method","mode","cache","credentials","headers","then","res","ok","Error","json","data","type","catch","error","alert","RequestUserData","REACT_APP_USER_DATA","String","userNickName","Number","userOpenDate","setTimeout","code","queryStringBody","Object","keys","map","k","encodeURIComponent","encodeURI","join","REACT_APP_KAKAO_LOGIN","body","REACT_APP_USERID","JSON","stringify","console","log"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Redirect.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport './Redirect.css';\r\n\r\nfunction Redirect() {\r\n    const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const urlParams = new URL(window.location.href).searchParams;\r\n    const name = urlParams.get('code');\r\n    const urlParamsErro = new URL(window.location.href).searchParams;\r\n    const nameErro = urlParamsErro.get('error_description');\r\n\r\n    // console.log 삭제 필요.\r\n\r\n    // 받은 편지 배열 요청 기능\r\n    function RequestLetterArray(userId) {\r\n        fetch(`${process.env.REACT_APP_LETTER_ARRAY}${userId}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 편지 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    // 사용자 정보 요청 기능\r\n    function RequestUserData(userId) {\r\n        fetch(`${process.env.REACT_APP_USER_DATA}${userId}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_USERNICKNAME', data: String(data.userNickName) });\r\n                dispatch({ type: 'CHANGE_OPENDATE', data: Number(data.userOpenDate) });\r\n                RequestLetterArray(userId);\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    // (랜더링 직후) 사용자 로그인 기능\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (nameErro === 'User denied access') {\r\n                alert('로그인에 실패하였습니다.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            };\r\n            const code = { code: name };\r\n            const queryStringBody = Object.keys(code)\r\n                .map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k]))\r\n                .join(\"&\");\r\n            fetch(`${process.env.REACT_APP_KAKAO_LOGIN}`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                },\r\n                body: queryStringBody\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        throw new Error();\r\n                    };\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    fetch(`${process.env.REACT_APP_USERID}`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                        .then(res => {\r\n                            if (!res.ok) {\r\n                                throw new Error();\r\n                            };\r\n                            return res.json();\r\n                        })\r\n                        .then((data) => {\r\n                            // \r\n                            console.log(data);\r\n                            // \r\n                            dispatch({ type: 'CHANGE_USERID', data: data });\r\n                            RequestUserData(data);\r\n                            navigater('/main');\r\n                        })\r\n                        .catch((error) => {\r\n                            alert('서버가 불안정 하여 사용자 아이디를 받아오지 못했습니다.');\r\n                            dispatch({ type: 'CHANGE_USERID', data: null });\r\n                            navigater('/login');\r\n                        })\r\n                })\r\n                .catch((error) => {\r\n                    alert('서버가 불안정 하여 로그인에 실패했습니다.');\r\n                    dispatch({ type: 'CHANGE_USERID', data: null });\r\n                    navigater('/login');\r\n                });\r\n        }, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='redirect_outContainer'>\r\n                <section className='section_shootingStar'>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                </section>\r\n                <div className='redirect_gif'></div>\r\n                <h3 className='redirect_h3'>로그인 중입니다...</h3>\r\n                <h4 className='redirect_h4'>[리빙포인트] 달에는 토끼가 떡을 만들고 있다.</h4>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Redirect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}