{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blue_\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\GitHub\\\\soso-web\\\\main\\\\src\\\\components\\\\Refresh.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport './Refresh.css';\n\n// ReauestLetterDataArray 함수에 userID 추가(하드코딩 수정)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Refresh() {\n  _s();\n  const dispatch = useDispatch();\n  const navigater = useNavigate();\n  // const userID = useSelector((state) => state.userID);\n  const [refresh, setRefresh] = useState(false);\n\n  // 받은 편지 배열 요청 기능\n  function RequestLetterDataArray() {\n    fetch(process.env.REACT_APP_LETTER_ARRAY + 'pEMui3Dz3Pj1eCaIqVj8zgMSJSM3DMSJSM3D', {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch({\n        type: 'CHANGE_LETTERDATA',\n        data: data\n      });\n    }).catch(error => {\n      console.log(error);\n      alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\n      dispatch({\n        type: 'CHANGE_USERID',\n        data: null\n      });\n      navigater('/login');\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: refresh ? \"refresh_active\" : \"refresh\",\n      onClick: () => {\n        setRefresh(!refresh);\n        setTimeout(() => {\n          setRefresh(!refresh);\n          dispatch({\n            type: 'CHANGE_LETTERDATA',\n            data: []\n          });\n          RequestLetterDataArray();\n        }, 2000);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Refresh, \"/66cJ7laKAxeyD3TBxFOlBNgOUg=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Refresh;\n;\nexport default Refresh;\nvar _c;\n$RefreshReg$(_c, \"Refresh\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useNavigate","Refresh","dispatch","navigater","refresh","setRefresh","RequestLetterDataArray","fetch","process","env","REACT_APP_LETTER_ARRAY","method","mode","cache","credentials","headers","then","res","json","data","type","catch","error","console","log","alert","setTimeout"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Refresh.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Refresh.css';\r\n\r\n// ReauestLetterDataArray 함수에 userID 추가(하드코딩 수정)\r\n\r\nfunction Refresh() {\r\n    const dispatch = useDispatch();\r\n    const navigater = useNavigate();\r\n    // const userID = useSelector((state) => state.userID);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    // 받은 편지 배열 요청 기능\r\n    function RequestLetterDataArray() {\r\n        fetch(process.env.REACT_APP_LETTER_ARRAY + 'pEMui3Dz3Pj1eCaIqVj8zgMSJSM3DMSJSM3D', {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={refresh ? \"refresh_active\" : \"refresh\"} onClick={() => {\r\n                setRefresh(!refresh);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\r\n                    RequestLetterDataArray();\r\n                }, 2000);\r\n            }}></div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Refresh;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;;AAEtB;AAAA;AAEA,SAASC,OAAO,GAAG;EAAA;EACf,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAMI,SAAS,GAAGH,WAAW,EAAE;EAC/B;EACA,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,SAASS,sBAAsB,GAAG;IAC9BC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB,GAAG,sCAAsC,EAAE;MAC/EC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,UAAU;MACjBC,WAAW,EAAE,aAAa;MAC1BC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAK;MACZjB,QAAQ,CAAC;QAAEkB,IAAI,EAAE,mBAAmB;QAAED,IAAI,EAAEA;MAAK,CAAC,CAAC;IACvD,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBG,KAAK,CAAC,0CAA0C,CAAC;MACjDvB,QAAQ,CAAC;QAAEkB,IAAI,EAAE,eAAe;QAAED,IAAI,EAAE;MAAK,CAAC,CAAC;MAC/ChB,SAAS,CAAC,QAAQ,CAAC;IACvB,CAAC,CAAC;EACV;EAAC;EAED,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACX;MAAK,SAAS,EAAEC,OAAO,GAAG,gBAAgB,GAAG,SAAU;MAAC,OAAO,EAAE,MAAM;QACnEC,UAAU,CAAC,CAACD,OAAO,CAAC;QACpBsB,UAAU,CAAC,MAAM;UACbrB,UAAU,CAAC,CAACD,OAAO,CAAC;UACpBF,QAAQ,CAAC;YAAEkB,IAAI,EAAE,mBAAmB;YAAED,IAAI,EAAE;UAAG,CAAC,CAAC;UACjDb,sBAAsB,EAAE;QAC5B,CAAC,EAAE,IAAI,CAAC;MACZ;IAAE;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACI;AAEzB;AAAC,GAzCQL,OAAO;EAAA,QACKF,WAAW,EACVC,WAAW;AAAA;AAAA,KAFxBC,OAAO;AAyCf;AAED,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}