{"ast":null,"code":"import React,{useEffect}from'react';import{useNavigate}from\"react-router-dom\";import{useDispatch}from'react-redux';import'./Redirect.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Redirect(){var navigater=useNavigate();var dispatch=useDispatch();var urlParams=new URL(window.location.href).searchParams;var name=urlParams.get('code');var urlParamsErro=new URL(window.location.href).searchParams;var nameErro=urlParamsErro.get('error_description');// console.log 삭제 필요. 공유 가능 사용자 아이디 발급 기능 삭제 필요.\n// 공유 가능 사용자 아이디 발급 기능\nfunction RequestShareUserID(userID){fetch(\"\".concat(process.env.REACT_APP_SHARE_USERID).concat(userID),{method:'GET',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(function(res){if(!res.ok){throw new Error();};return res.json();}).then(function(data){dispatch({type:'CHANGE_SHAREUSERID',data:String(data)});}).catch(function(error){alert('공유 가능한 사용자 주소를 정상적으로 받아오지 못했습니다. 공유 버튼을 다시 눌러주세요.');});};// 사용자 동의 항목 요청 기능\nfunction RequestUserMSG(userId){fetch(\"\".concat(process.env.REACT_APP_USER_MSG).concat(userId),{method:'GET',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(function(res){if(!res.ok){throw new Error();};return res.json();}).then(function(data){dispatch({type:'CHANGE_AGREEMENT',data:data});// \nRequestShareUserID(userId);// \n}).catch(function(error){alert('정상적으로 사용자 동의 항목 정보를 응답 받지 못했습니다. 다시 로그인 해주세요.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});};// 받은 편지 배열 요청 기능\nfunction RequestLetterArray(userId){fetch(\"\".concat(process.env.REACT_APP_LETTER_ARRAY).concat(userId),{method:'GET',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(function(res){if(!res.ok){throw new Error();};return res.json();}).then(function(data){if(data.length>37){for(var i=0;data.length-36;i++){data.pop();};dispatch({type:'CHANGE_LETTERDATA',data:data});}else{dispatch({type:'CHANGE_LETTERDATA',data:data});};RequestUserMSG(userId);}).catch(function(error){alert('정상적으로 사용자 편지 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});};// 사용자 정보 요청 기능\nfunction RequestUserData(userId){fetch(\"\".concat(process.env.REACT_APP_USER_DATA).concat(userId),{method:'GET',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(function(res){if(!res.ok){throw new Error();};return res.json();}).then(function(data){// \nvar origin=data.userOpenDate;origin.setDate(origin.getDate()-10);// origin.setHours(origin.getHours() - 1);\nconsole.log(origin);// \ndispatch({type:'CHANGE_USERNICKNAME',data:String(data.userNickName)});// \ndispatch({type:'CHANGE_OPENDATE',data:Number(origin)});// \n// dispatch({ type: 'CHANGE_OPENDATE', data: Number(data.userOpenDate) });\nRequestLetterArray(userId);}).catch(function(error){alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});};// (랜더링 직후) 사용자 로그인 기능\nuseEffect(function(){setTimeout(function(){if(nameErro==='User denied access'){alert('로그인에 실패하였습니다.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');};var code={code:name};var queryStringBody=Object.keys(code).map(function(k){return encodeURIComponent(k)+\"=\"+encodeURI(code[k]);}).join(\"&\");fetch(\"\".concat(process.env.REACT_APP_KAKAO_LOGIN),{method:'POST',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'content-type':'application/x-www-form-urlencoded;charset=utf-8'},body:queryStringBody}).then(function(res){if(!res.ok){throw new Error();};return res.json();}).then(function(data){fetch(\"\".concat(process.env.REACT_APP_USERID),{method:'POST',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(res){if(!res.ok){throw new Error();};return res.json();}).then(function(data){// \nconsole.log(data);// \ndispatch({type:'CHANGE_USERID',data:data});RequestUserData(data);navigater('/main');}).catch(function(error){alert('서버가 불안정 하여 사용자 아이디를 받아오지 못했습니다.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});}).catch(function(error){alert('서버가 불안정 하여 로그인에 실패했습니다.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});},500);},[]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"redirect_outContainer\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"section_shootingStar\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"shootingStar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"shootingStar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"shootingStar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"shootingStar\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"redirect_gif\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"redirect_h3\",children:\"\\uB85C\\uADF8\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4...\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"redirect_h4\",children:\"[\\uB9AC\\uBE59\\uD3EC\\uC778\\uD2B8] \\uB2EC\\uC5D0\\uB294 \\uD1A0\\uB07C\\uAC00 \\uB5A1\\uC744 \\uB9CC\\uB4E4\\uACE0 \\uC788\\uB2E4.\"})]})});};export default Redirect;","map":{"version":3,"names":["React","useEffect","useNavigate","useDispatch","Redirect","navigater","dispatch","urlParams","URL","window","location","href","searchParams","name","get","urlParamsErro","nameErro","RequestShareUserID","userID","fetch","process","env","REACT_APP_SHARE_USERID","method","mode","cache","credentials","headers","then","res","ok","Error","json","data","type","String","catch","error","alert","RequestUserMSG","userId","REACT_APP_USER_MSG","RequestLetterArray","REACT_APP_LETTER_ARRAY","length","i","pop","RequestUserData","REACT_APP_USER_DATA","origin","userOpenDate","setDate","getDate","console","log","userNickName","Number","setTimeout","code","queryStringBody","Object","keys","map","k","encodeURIComponent","encodeURI","join","REACT_APP_KAKAO_LOGIN","body","REACT_APP_USERID","JSON","stringify"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Redirect.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport './Redirect.css';\r\n\r\nfunction Redirect() {\r\n    const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const urlParams = new URL(window.location.href).searchParams;\r\n    const name = urlParams.get('code');\r\n    const urlParamsErro = new URL(window.location.href).searchParams;\r\n    const nameErro = urlParamsErro.get('error_description');\r\n\r\n    // console.log 삭제 필요. 공유 가능 사용자 아이디 발급 기능 삭제 필요.\r\n\r\n    // 공유 가능 사용자 아이디 발급 기능\r\n    function RequestShareUserID(userID) {\r\n        fetch(`${process.env.REACT_APP_SHARE_USERID}${userID}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_SHAREUSERID', data: String(data) });\r\n            })\r\n            .catch((error) => {\r\n                alert('공유 가능한 사용자 주소를 정상적으로 받아오지 못했습니다. 공유 버튼을 다시 눌러주세요.');\r\n            });\r\n    };\r\n\r\n    // 사용자 동의 항목 요청 기능\r\n    function RequestUserMSG(userId) {\r\n        fetch(`${process.env.REACT_APP_USER_MSG}${userId}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_AGREEMENT', data: data });\r\n                // \r\n                RequestShareUserID(userId);\r\n                // \r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 동의 항목 정보를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    // 받은 편지 배열 요청 기능\r\n    function RequestLetterArray(userId) {\r\n        fetch(`${process.env.REACT_APP_LETTER_ARRAY}${userId}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                if (data.length > 37) {\r\n                    for (let i = 0; data.length - 36; i++) {\r\n                        data.pop();\r\n                    };\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                } else {\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                };\r\n                RequestUserMSG(userId);\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 편지 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    // 사용자 정보 요청 기능\r\n    function RequestUserData(userId) {\r\n        fetch(`${process.env.REACT_APP_USER_DATA}${userId}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                // \r\n                let origin = data.userOpenDate;\r\n                origin.setDate(origin.getDate() - 10);\r\n                // origin.setHours(origin.getHours() - 1);\r\n                console.log(origin);\r\n                // \r\n                dispatch({ type: 'CHANGE_USERNICKNAME', data: String(data.userNickName) });\r\n                // \r\n                dispatch({ type: 'CHANGE_OPENDATE', data: Number(origin) });\r\n                // \r\n                // dispatch({ type: 'CHANGE_OPENDATE', data: Number(data.userOpenDate) });\r\n                RequestLetterArray(userId);\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    // (랜더링 직후) 사용자 로그인 기능\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (nameErro === 'User denied access') {\r\n                alert('로그인에 실패하였습니다.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            };\r\n            const code = { code: name };\r\n            const queryStringBody = Object.keys(code)\r\n                .map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k]))\r\n                .join(\"&\");\r\n            fetch(`${process.env.REACT_APP_KAKAO_LOGIN}`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                },\r\n                body: queryStringBody\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        throw new Error();\r\n                    };\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    fetch(`${process.env.REACT_APP_USERID}`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                        .then(res => {\r\n                            if (!res.ok) {\r\n                                throw new Error();\r\n                            };\r\n                            return res.json();\r\n                        })\r\n                        .then((data) => {\r\n                            // \r\n                            console.log(data);\r\n                            // \r\n                            dispatch({ type: 'CHANGE_USERID', data: data });\r\n                            RequestUserData(data);\r\n                            navigater('/main');\r\n                        })\r\n                        .catch((error) => {\r\n                            alert('서버가 불안정 하여 사용자 아이디를 받아오지 못했습니다.');\r\n                            dispatch({ type: 'CHANGE_USERID', data: null });\r\n                            navigater('/login');\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    alert('서버가 불안정 하여 로그인에 실패했습니다.');\r\n                    dispatch({ type: 'CHANGE_USERID', data: null });\r\n                    navigater('/login');\r\n                });\r\n        }, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='redirect_outContainer'>\r\n                <section className='section_shootingStar'>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                </section>\r\n                <div className='redirect_gif'></div>\r\n                <h3 className='redirect_h3'>로그인 중입니다...</h3>\r\n                <h4 className='redirect_h4'>[리빙포인트] 달에는 토끼가 떡을 만들고 있다.</h4>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Redirect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}