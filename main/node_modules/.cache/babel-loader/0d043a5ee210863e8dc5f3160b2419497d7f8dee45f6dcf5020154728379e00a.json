{"ast":null,"code":"import _slicedToArray from\"C:/Users/blue_/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/GitHub/soso-web/main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useSelector,useDispatch}from'react-redux';import{useNavigate}from\"react-router-dom\";import'./Refresh.css';import{jsx as _jsx}from\"react/jsx-runtime\";function Refresh(){var dispatch=useDispatch();var navigater=useNavigate();var userID=useSelector(function(state){return state.userID;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),refresh=_useState2[0],setRefresh=_useState2[1];var isShareBt=useSelector(function(state){return state.isShareBt;});// 받은 편지 배열 요청 기능\nfunction RequestLetterDataArray(){dispatch({type:'CHANGE_ISSHAREBT',data:!isShareBt});fetch(\"\".concat(process.env.REACT_APP_LETTER_ARRAY).concat(userID),{method:'GET',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(function(res){if(!res.ok){throw new Error();};return res.json();}).then(function(data){if(data.length>37){for(var i=0;data.length-36;i++){data.pop();};dispatch({type:'CHANGE_LETTERDATA',data:data});}else{dispatch({type:'CHANGE_LETTERDATA',data:data});};}).catch(function(error){alert('정상적으로 사용자 편지 정보를 받아오지 못했습니다. 다시 시도해주세요.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:refresh?\"refresh_active\":\"refresh\",onClick:function onClick(){setRefresh(!refresh);setTimeout(function(){setRefresh(!refresh);dispatch({type:'CHANGE_LETTERDATA',data:[]});RequestLetterDataArray();},2000);}})});};export default Refresh;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useNavigate","Refresh","dispatch","navigater","userID","state","refresh","setRefresh","isShareBt","RequestLetterDataArray","type","data","fetch","process","env","REACT_APP_LETTER_ARRAY","method","mode","cache","credentials","headers","then","res","ok","Error","json","length","i","pop","catch","error","alert","setTimeout"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Refresh.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Refresh.css';\r\n\r\nfunction Refresh() {\r\n    const dispatch = useDispatch();\r\n    const navigater = useNavigate();\r\n    const userID = useSelector((state) => state.userID);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const isShareBt = useSelector((state) => state.isShareBt);\r\n\r\n    // 받은 편지 배열 요청 기능\r\n    function RequestLetterDataArray() {\r\n        dispatch({ type: 'CHANGE_ISSHAREBT', data: !isShareBt });\r\n        fetch(`${process.env.REACT_APP_LETTER_ARRAY}${userID}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                if (data.length > 37) {\r\n                    for (let i = 0; data.length - 36; i++) {\r\n                        data.pop();\r\n                    };\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                } else {\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                };\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 편지 정보를 받아오지 못했습니다. 다시 시도해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={refresh ? \"refresh_active\" : \"refresh\"} onClick={() => {\r\n                setRefresh(!refresh);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\r\n                    RequestLetterDataArray();\r\n                }, 2000);\r\n            }}></div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Refresh;"],"mappings":"4JAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,eAAe,CAAC,2CAEvB,QAASC,QAAO,EAAG,CACf,GAAMC,SAAQ,CAAGH,WAAW,EAAE,CAC9B,GAAMI,UAAS,CAAGH,WAAW,EAAE,CAC/B,GAAMI,OAAM,CAAGN,WAAW,CAAC,SAACO,KAAK,QAAKA,MAAK,CAACD,MAAM,GAAC,CACnD,cAA8BP,QAAQ,CAAC,KAAK,CAAC,wCAAtCS,OAAO,eAAEC,UAAU,eAC1B,GAAMC,UAAS,CAAGV,WAAW,CAAC,SAACO,KAAK,QAAKA,MAAK,CAACG,SAAS,GAAC,CAEzD;AACA,QAASC,uBAAsB,EAAG,CAC9BP,QAAQ,CAAC,CAAEQ,IAAI,CAAE,kBAAkB,CAAEC,IAAI,CAAE,CAACH,SAAU,CAAC,CAAC,CACxDI,KAAK,WAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB,SAAGX,MAAM,EAAI,CACpDY,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,MAAM,CACZC,KAAK,CAAE,UAAU,CACjBC,WAAW,CAAE,aAAa,CAC1BC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CACGC,IAAI,CAAC,SAAAC,GAAG,CAAI,CACT,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CACT,KAAM,IAAIC,MAAK,EAAE,CACrB,CAAC,CACD,MAAOF,IAAG,CAACG,IAAI,EAAE,CACrB,CAAC,CAAC,CACDJ,IAAI,CAAC,SAACV,IAAI,CAAK,CACZ,GAAIA,IAAI,CAACe,MAAM,CAAG,EAAE,CAAE,CAClB,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEhB,IAAI,CAACe,MAAM,CAAG,EAAE,CAAEC,CAAC,EAAE,CAAE,CACnChB,IAAI,CAACiB,GAAG,EAAE,CACd,CAAC,CACD1B,QAAQ,CAAC,CAAEQ,IAAI,CAAE,mBAAmB,CAAEC,IAAI,CAAEA,IAAK,CAAC,CAAC,CACvD,CAAC,IAAM,CACHT,QAAQ,CAAC,CAAEQ,IAAI,CAAE,mBAAmB,CAAEC,IAAI,CAAEA,IAAK,CAAC,CAAC,CACvD,CAAC,CACL,CAAC,CAAC,CACDkB,KAAK,CAAC,SAACC,KAAK,CAAK,CACdC,KAAK,CAAC,yCAAyC,CAAC,CAChD7B,QAAQ,CAAC,CAAEQ,IAAI,CAAE,eAAe,CAAEC,IAAI,CAAE,IAAK,CAAC,CAAC,CAC/CR,SAAS,CAAC,QAAQ,CAAC,CACvB,CAAC,CAAC,CACV,CAAC,CAED,mBACI,KAAC,KAAK,CAAC,QAAQ,wBACX,YAAK,SAAS,CAAEG,OAAO,CAAG,gBAAgB,CAAG,SAAU,CAAC,OAAO,CAAE,kBAAM,CACnEC,UAAU,CAAC,CAACD,OAAO,CAAC,CACpB0B,UAAU,CAAC,UAAM,CACbzB,UAAU,CAAC,CAACD,OAAO,CAAC,CACpBJ,QAAQ,CAAC,CAAEQ,IAAI,CAAE,mBAAmB,CAAEC,IAAI,CAAE,EAAG,CAAC,CAAC,CACjDF,sBAAsB,EAAE,CAC5B,CAAC,CAAE,IAAI,CAAC,CACZ,CAAE,EAAO,EACI,CAEzB,CAAC,CAED,cAAeR,QAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}