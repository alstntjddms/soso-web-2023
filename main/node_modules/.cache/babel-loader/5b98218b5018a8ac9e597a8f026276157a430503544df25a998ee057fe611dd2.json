{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blue_\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\GitHub\\\\soso-web\\\\main\\\\src\\\\components\\\\Refresh.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport './Refresh.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Refresh() {\n  _s();\n  const dispatch = useDispatch();\n  const navigater = useNavigate();\n  const userID = useSelector(state => state.userID);\n  const [refresh, setRefresh] = useState(false);\n\n  // 받은 편지 배열 요청 기능\n  function RequestLetterDataArray() {\n    fetch(`${process.env.REACT_APP_LETTER_ARRAY}${userID}`, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error();\n      }\n      ;\n      return res.json();\n    }).then(data => {\n      if (data.length > 37) {\n        for (let i = 0; data.length - 36; i++) {\n          data.pop();\n        }\n        ;\n        dispatch({\n          type: 'CHANGE_LETTERDATA',\n          data: data\n        });\n      } else {\n        dispatch({\n          type: 'CHANGE_LETTERDATA',\n          data: data\n        });\n      }\n      ;\n    }).catch(error => {\n      alert('정상적으로 사용자 편지 정보를 받아오지 못했습니다. 다시 시도해주세요.');\n      dispatch({\n        type: 'CHANGE_USERID',\n        data: null\n      });\n      navigater('/web/login');\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: refresh ? \"refresh_active\" : \"refresh\",\n      onClick: () => {\n        dispatch({\n          type: 'CHANGE_ISSHAREBT',\n          data: false\n        });\n        setRefresh(!refresh);\n        setTimeout(() => {\n          setRefresh(!refresh);\n          dispatch({\n            type: 'CHANGE_LETTERDATA',\n            data: []\n          });\n          RequestLetterDataArray();\n        }, 2000);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Refresh, \"weXzIPAmw5jF2dTwY6DB8M6hc9Y=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Refresh;\n;\nexport default Refresh;\nvar _c;\n$RefreshReg$(_c, \"Refresh\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useNavigate","Refresh","dispatch","navigater","userID","state","refresh","setRefresh","RequestLetterDataArray","fetch","process","env","REACT_APP_LETTER_ARRAY","method","mode","cache","credentials","headers","then","res","ok","Error","json","data","length","i","pop","type","catch","error","alert","setTimeout"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Refresh.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Refresh.css';\r\n\r\nfunction Refresh() {\r\n    const dispatch = useDispatch();\r\n    const navigater = useNavigate();\r\n    const userID = useSelector((state) => state.userID);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    // 받은 편지 배열 요청 기능\r\n    function RequestLetterDataArray() {\r\n        fetch(`${process.env.REACT_APP_LETTER_ARRAY}${userID}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                if (data.length > 37) {\r\n                    for (let i = 0; data.length - 36; i++) {\r\n                        data.pop();\r\n                    };\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                } else {\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                };\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 편지 정보를 받아오지 못했습니다. 다시 시도해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/web/login');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={refresh ? \"refresh_active\" : \"refresh\"} onClick={() => {\r\n                dispatch({ type: 'CHANGE_ISSHAREBT', data: false });\r\n                setRefresh(!refresh);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\r\n                    RequestLetterDataArray();\r\n                }, 2000);\r\n            }}></div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Refresh;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;AAAC;AAEvB,SAASC,OAAO,GAAG;EAAA;EACf,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAMI,SAAS,GAAGH,WAAW,EAAE;EAC/B,MAAMI,MAAM,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,MAAM,CAAC;EACnD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,SAASW,sBAAsB,GAAG;IAC9BC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,GAAER,MAAO,EAAC,EAAE;MACpDS,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,UAAU;MACjBC,WAAW,EAAE,aAAa;MAC1BC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGC,IAAI,CAACC,GAAG,IAAI;MACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACT,MAAM,IAAIC,KAAK,EAAE;MACrB;MAAC;MACD,OAAOF,GAAG,CAACG,IAAI,EAAE;IACrB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACC,MAAM,GAAG,EAAE,EAAE;QAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEF,IAAI,CAACC,MAAM,GAAG,EAAE,EAAEC,CAAC,EAAE,EAAE;UACnCF,IAAI,CAACG,GAAG,EAAE;QACd;QAAC;QACDxB,QAAQ,CAAC;UAAEyB,IAAI,EAAE,mBAAmB;UAAEJ,IAAI,EAAEA;QAAK,CAAC,CAAC;MACvD,CAAC,MAAM;QACHrB,QAAQ,CAAC;UAAEyB,IAAI,EAAE,mBAAmB;UAAEJ,IAAI,EAAEA;QAAK,CAAC,CAAC;MACvD;MAAC;IACL,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MACdC,KAAK,CAAC,yCAAyC,CAAC;MAChD5B,QAAQ,CAAC;QAAEyB,IAAI,EAAE,eAAe;QAAEJ,IAAI,EAAE;MAAK,CAAC,CAAC;MAC/CpB,SAAS,CAAC,YAAY,CAAC;IAC3B,CAAC,CAAC;EACV;EAAC;EAED,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACX;MAAK,SAAS,EAAEG,OAAO,GAAG,gBAAgB,GAAG,SAAU;MAAC,OAAO,EAAE,MAAM;QACnEJ,QAAQ,CAAC;UAAEyB,IAAI,EAAE,kBAAkB;UAAEJ,IAAI,EAAE;QAAM,CAAC,CAAC;QACnDhB,UAAU,CAAC,CAACD,OAAO,CAAC;QACpByB,UAAU,CAAC,MAAM;UACbxB,UAAU,CAAC,CAACD,OAAO,CAAC;UACpBJ,QAAQ,CAAC;YAAEyB,IAAI,EAAE,mBAAmB;YAAEJ,IAAI,EAAE;UAAG,CAAC,CAAC;UACjDf,sBAAsB,EAAE;QAC5B,CAAC,EAAE,IAAI,CAAC;MACZ;IAAE;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACI;AAEzB;AAAC,GArDQP,OAAO;EAAA,QACKF,WAAW,EACVC,WAAW,EACdF,WAAW;AAAA;AAAA,KAHrBG,OAAO;AAqDf;AAED,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}