{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blue_\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\GitHub\\\\soso-web\\\\main\\\\src\\\\components\\\\Redirect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport './Redirect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Redirect() {\n  _s();\n  const navigater = useNavigate();\n  const dispatch = useDispatch();\n  const urlParams = new URL(window.location.href).searchParams;\n  const name = urlParams.get('code');\n  const urlParamsErro = new URL(window.location.href).searchParams;\n  const nameErro = urlParamsErro.get('error_description');\n\n  // function requestToken() {\n  //     const body = {\n  //         grant_type: \"authorization_code\",\n  //         client_id: process.env.REACT_APP_REST_API_KEY,\n  //         redirect_uri: \"\",\n  //         code: name\n  //     };\n  //     const queryStringBody = Object.keys(body)\n  //         .map(k => encodeURIComponent(k) + \"=\" + encodeURI(body[k]))\n  //         .join(\"&\");\n  //     fetch(\"https://kauth.kakao.com/oauth/token\", {\n  //         method: \"POST\",\n  //         headers: {\n  //             'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n  //         },\n  //         body: queryStringBody\n  //     })\n  //         .then(res => res.json())\n  //         .then((data) => {\n  //             console.log(data);\n  //             console.log(data.access_token);\n  //             usertoken = data.access_token;\n  //         });\n  // };\n\n  function RequestLetterArray(userId) {\n    fetch('https://plater.kr/api/letter/userid/' + userId, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch({\n        type: 'CHANGE_USERID',\n        data: null\n      });\n      letterData.push(...data);\n    }).catch(error => {\n      console.log(error);\n      alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\n      dispatch({\n        type: 'CHANGE_USERID',\n        data: null\n      });\n      navigater('/login');\n    });\n  }\n  ;\n  function RequestUserData(userId) {\n    fetch('https://plater.kr/api/member/' + userId, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(userData => {\n      console.log(userData);\n      dispatch({\n        type: 'CHANGE_USERNICKNAME',\n        data: String(userData.userNickName)\n      });\n      dispatch({\n        type: 'CHANGE_OPENDATE',\n        data: Number(userData.userOpenDate)\n      });\n      RequestLetterArray(userId);\n    }).catch(userDate_error => {\n      console.log(userDate_error);\n      alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\n      dispatch({\n        type: 'CHANGE_USERID',\n        data: null\n      });\n      navigater('/login');\n    });\n  }\n  ;\n  useEffect(() => {\n    setTimeout(() => {\n      if (nameErro === 'User denied access') {\n        alert('로그인에 실패하였습니다.');\n        dispatch({\n          type: 'CHANGE_USERID',\n          data: null\n        });\n        navigater('/login');\n      }\n      ;\n      const code = {\n        code: name\n      };\n      console.log(code);\n      const queryStringBody = Object.keys(code).map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k])).join(\"&\");\n      fetch('https://plater.kr/api/kakao/', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n        },\n        body: queryStringBody\n      }).then(res => res.json()).then(data => {\n        console.log('암호화된 ID: ' + data);\n        fetch('https://plater.kr/api/member/', {\n          method: 'POST',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(plus_res => plus_res.json()).then(plus_data => {\n          console.log('비암호화된 ID: ' + plus_data);\n          dispatch({\n            type: 'CHANGE_USERID',\n            data: plus_data\n          });\n          RequestUserData(plus_data);\n          navigater('/main');\n        }).catch(plus_error => {\n          console.log('비암호화된 ID 오류: ' + plus_error);\n          alert('서버가 불안정 하여 비암호화된 사용자 ID를 받아오지 못했습니다.');\n          dispatch({\n            type: 'CHANGE_USERID',\n            data: null\n          });\n          navigater('/login');\n        });\n      }).catch(error => {\n        console.log('암호화된 ID 오류: ' + error);\n        alert('서버가 불안정 하여 로그인에 실패했습니다.');\n        dispatch({\n          type: 'CHANGE_USERID',\n          data: null\n        });\n        navigater('/login');\n      });\n    }, 500);\n  }, []);\n  // }, [name, nameErro, navigater, dispatch]);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"redirect_outContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section_shootingStar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shootingStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"redirect_gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"redirect_h3\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"redirect_h4\",\n        children: \"[\\uB9AC\\uBE59\\uD3EC\\uC778\\uD2B8] \\uB2EC\\uC5D0\\uB294 \\uD1A0\\uB07C\\uAC00 \\uB5A1\\uC744 \\uB9CC\\uB4E4\\uACE0 \\uC788\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n_s(Redirect, \"u8YrTRbJdKBnoaK26foC3awRqKA=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Redirect;\n;\nexport default Redirect;\nvar _c;\n$RefreshReg$(_c, \"Redirect\");","map":{"version":3,"names":["React","useEffect","useNavigate","useDispatch","Redirect","navigater","dispatch","urlParams","URL","window","location","href","searchParams","name","get","urlParamsErro","nameErro","RequestLetterArray","userId","fetch","method","mode","cache","credentials","headers","then","res","json","data","type","letterData","push","catch","error","console","log","alert","RequestUserData","userData","String","userNickName","Number","userOpenDate","userDate_error","setTimeout","code","queryStringBody","Object","keys","map","k","encodeURIComponent","encodeURI","join","body","JSON","stringify","plus_res","plus_data","plus_error"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Redirect.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport './Redirect.css';\r\n\r\nfunction Redirect() {\r\n    const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const urlParams = new URL(window.location.href).searchParams;\r\n    const name = urlParams.get('code');\r\n    const urlParamsErro = new URL(window.location.href).searchParams;\r\n    const nameErro = urlParamsErro.get('error_description');\r\n\r\n    // function requestToken() {\r\n    //     const body = {\r\n    //         grant_type: \"authorization_code\",\r\n    //         client_id: process.env.REACT_APP_REST_API_KEY,\r\n    //         redirect_uri: \"\",\r\n    //         code: name\r\n    //     };\r\n    //     const queryStringBody = Object.keys(body)\r\n    //         .map(k => encodeURIComponent(k) + \"=\" + encodeURI(body[k]))\r\n    //         .join(\"&\");\r\n    //     fetch(\"https://kauth.kakao.com/oauth/token\", {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n    //         },\r\n    //         body: queryStringBody\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //             console.log(data.access_token);\r\n    //             usertoken = data.access_token;\r\n    //         });\r\n    // };\r\n\r\n    function RequestLetterArray(userId) {\r\n        fetch('https://plater.kr/api/letter/userid/' + userId, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                letterData.push(...data);\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    function RequestUserData(userId) {\r\n        fetch('https://plater.kr/api/member/' + userId, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((userData) => {\r\n                console.log(userData);\r\n                dispatch({ type: 'CHANGE_USERNICKNAME', data: String(userData.userNickName) });\r\n                dispatch({ type: 'CHANGE_OPENDATE', data: Number(userData.userOpenDate) });\r\n                RequestLetterArray(userId);\r\n            })\r\n            .catch((userDate_error) => {\r\n                console.log(userDate_error);\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (nameErro === 'User denied access') {\r\n                alert('로그인에 실패하였습니다.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            };\r\n            const code = { code: name };\r\n            console.log(code);\r\n            const queryStringBody = Object.keys(code)\r\n                .map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k]))\r\n                .join(\"&\");\r\n            fetch('https://plater.kr/api/kakao/', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                },\r\n                body: queryStringBody\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    console.log('암호화된 ID: ' + data);\r\n                    fetch('https://plater.kr/api/member/', {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                        .then(plus_res => plus_res.json())\r\n                        .then((plus_data) => {\r\n                            console.log('비암호화된 ID: ' + plus_data);\r\n                            dispatch({ type: 'CHANGE_USERID', data: plus_data });\r\n                            RequestUserData(plus_data);\r\n                            navigater('/main');\r\n                        })\r\n                        .catch((plus_error) => {\r\n                            console.log('비암호화된 ID 오류: ' + plus_error);\r\n                            alert('서버가 불안정 하여 비암호화된 사용자 ID를 받아오지 못했습니다.');\r\n                            dispatch({ type: 'CHANGE_USERID', data: null });\r\n                            navigater('/login');\r\n                        })\r\n                })\r\n                .catch((error) => {\r\n                    console.log('암호화된 ID 오류: ' + error);\r\n                    alert('서버가 불안정 하여 로그인에 실패했습니다.');\r\n                    dispatch({ type: 'CHANGE_USERID', data: null });\r\n                    navigater('/login');\r\n                });\r\n        }, 500);\r\n    }, []);\r\n    // }, [name, nameErro, navigater, dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='redirect_outContainer'>\r\n                <section className='section_shootingStar'>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                </section>\r\n                <div className='redirect_gif'></div>\r\n                <h3 className='redirect_h3'>로그인 중입니다...</h3>\r\n                <h4 className='redirect_h4'>[리빙포인트] 달에는 토끼가 떡을 만들고 있다.</h4>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Redirect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}