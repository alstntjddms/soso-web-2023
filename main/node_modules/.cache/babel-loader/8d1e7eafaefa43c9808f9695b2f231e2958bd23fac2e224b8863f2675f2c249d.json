{"ast":null,"code":"import _slicedToArray from\"C:/Users/blue_/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/GitHub/soso-web/main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useSelector,useDispatch}from'react-redux';import{useNavigate}from\"react-router-dom\";import'./Refresh.css';// ReauestLetterDataArray 함수에 userID 추가(하드코딩 수정)\nimport{jsx as _jsx}from\"react/jsx-runtime\";function Refresh(){var dispatch=useDispatch();var navigater=useNavigate();// const userID = useSelector((state) => state.userID);\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),refresh=_useState2[0],setRefresh=_useState2[1];// 받은 편지 배열 요청 기능\nfunction RequestLetterDataArray(){fetch(\"\".concat(process.env.REACT_APP_LETTER_ARRAY,\"pEMui3Dz3Pj1eCaIqVj8zgMSJSM3DMSJSM3D\"),{method:'GET',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(data){dispatch({type:'CHANGE_LETTERDATA',data:data});}).catch(function(error){alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:refresh?\"refresh_active\":\"refresh\",onClick:function onClick(){setRefresh(!refresh);setTimeout(function(){setRefresh(!refresh);dispatch({type:'CHANGE_LETTERDATA',data:[]});RequestLetterDataArray();},2000);}})});};export default Refresh;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useNavigate","Refresh","dispatch","navigater","refresh","setRefresh","RequestLetterDataArray","fetch","process","env","REACT_APP_LETTER_ARRAY","method","mode","cache","credentials","headers","then","res","json","data","type","catch","error","alert","setTimeout"],"sources":["C:/Users/blue_/OneDrive/바탕 화면/GitHub/soso-web/main/src/components/Refresh.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Refresh.css';\r\n\r\n// ReauestLetterDataArray 함수에 userID 추가(하드코딩 수정)\r\n\r\nfunction Refresh() {\r\n    const dispatch = useDispatch();\r\n    const navigater = useNavigate();\r\n    // const userID = useSelector((state) => state.userID);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    // 받은 편지 배열 요청 기능\r\n    function RequestLetterDataArray() {\r\n        fetch(`${process.env.REACT_APP_LETTER_ARRAY}pEMui3Dz3Pj1eCaIqVj8zgMSJSM3DMSJSM3D`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={refresh ? \"refresh_active\" : \"refresh\"} onClick={() => {\r\n                setRefresh(!refresh);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\r\n                    RequestLetterDataArray();\r\n                }, 2000);\r\n            }}></div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Refresh;"],"mappings":"4JAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,eAAe,CAEtB;AAAA,2CAEA,QAASC,QAAO,EAAG,CACf,GAAMC,SAAQ,CAAGH,WAAW,EAAE,CAC9B,GAAMI,UAAS,CAAGH,WAAW,EAAE,CAC/B;AACA,cAA8BH,QAAQ,CAAC,KAAK,CAAC,wCAAtCO,OAAO,eAAEC,UAAU,eAE1B;AACA,QAASC,uBAAsB,EAAG,CAC9BC,KAAK,WAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB,yCAAwC,CAC/EC,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,MAAM,CACZC,KAAK,CAAE,UAAU,CACjBC,WAAW,CAAE,aAAa,CAC1BC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CACGC,IAAI,CAAC,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAACG,IAAI,CAAK,CACZjB,QAAQ,CAAC,CAAEkB,IAAI,CAAE,mBAAmB,CAAED,IAAI,CAAEA,IAAK,CAAC,CAAC,CACvD,CAAC,CAAC,CACDE,KAAK,CAAC,SAACC,KAAK,CAAK,CACdC,KAAK,CAAC,0CAA0C,CAAC,CACjDrB,QAAQ,CAAC,CAAEkB,IAAI,CAAE,eAAe,CAAED,IAAI,CAAE,IAAK,CAAC,CAAC,CAC/ChB,SAAS,CAAC,QAAQ,CAAC,CACvB,CAAC,CAAC,CACV,CAAC,CAED,mBACI,KAAC,KAAK,CAAC,QAAQ,wBACX,YAAK,SAAS,CAAEC,OAAO,CAAG,gBAAgB,CAAG,SAAU,CAAC,OAAO,CAAE,kBAAM,CACnEC,UAAU,CAAC,CAACD,OAAO,CAAC,CACpBoB,UAAU,CAAC,UAAM,CACbnB,UAAU,CAAC,CAACD,OAAO,CAAC,CACpBF,QAAQ,CAAC,CAAEkB,IAAI,CAAE,mBAAmB,CAAED,IAAI,CAAE,EAAG,CAAC,CAAC,CACjDb,sBAAsB,EAAE,CAC5B,CAAC,CAAE,IAAI,CAAC,CACZ,CAAE,EAAO,EACI,CAEzB,CAAC,CAED,cAAeL,QAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}